function [OutData,Fading]=rayleigh_channel...
          (InData,fd_max,NumOfTaps,LengthOfBurst,UpdatesPerBurst,itn_sample,dt,RndPhase,Path_Delay,Path_Average_Amp);

%% function [OutData,Fading]=rayleigh_channel...
%%          (InData,fd_max,NumOfTaps,LengthOfBurst,UpdatesPerBurst,itn_sample,dt,RndPhase,Path_Delay,Path_Average_Amp);
%%
%%-------------------------------------------------------------------------
%% Function discription:
%%-------------------------------------------------------------------------
%% Multipath Channel consists of several independent paths which is Rayleigh fading 

%% Input: 
%%-------------------------------------------------------------------------
%% InData: the Transfer signal 输入的数据应为行向量
%% group1,group2:  parameters used to generate fading,
%%                 generated by program multipath_channel_initialize.m
%% LengthOfBurst: the length of one processing period depend on not only
%%                frame length but only oversamping rate
%% NumOfTaps:Length of channel impulse response
%% itn_sample: Fading counter for each multipath fading (sample)
%% dt:  the basic time interval
%% UpdatesPerBurst : the number of update times per burst, 
%%                       to control slow or fast fading
%%-------------------------------------------------------------------------
%% Output:
%% OutData: the siganl which has passed through the multipath channel
%% Fading: the channel impulse response
%%-------------------------------------------------------------------------
NumOfFreq=8;  %%can'nt be modified
UpdateInterval=ceil(LengthOfBurst/UpdatesPerBurst);
%%-----------------------------------------------------------------------
%% Parameters for fading generating
%%-----------------------------------------------------------------------
M_OSCIL=NumOfFreq;
M_TONES=9;
N_MAGIC=34;
     
%%-----------------------------------------------------------------------
%% Initialise the coefficients for fading generating
%%-----------------------------------------------------------------------
for n = 1:M_OSCIL
    belta(n) = pi*n/M_OSCIL;
    An(n)=2*cos(belta(n));
    Bn(n)=2*sin(belta(n));
end
An(M_OSCIL+1) = 1.;
Bn(M_OSCIL+1) = 1.;
   
%%-----------------------------------------------------------------------
%% Initialise the tone frequencies 
%%-----------------------------------------------------------------------
for n=1:M_OSCIL
    Wn(n) = 2. * pi * fd_max * cos(2*pi*n/N_MAGIC);
end
Wn(M_OSCIL+1) = 2. * pi * fd_max;

%%-------------------------------------------------------------------------
%% main function
%%-------------------------------------------------------------------------
Output_Each_Channel=zeros(1,LengthOfBurst);
Output_Sub_path=zeros(1,LengthOfBurst);     

    Output_Each_Channel=zeros(1,LengthOfBurst);
    for tap=1:NumOfTaps
        %% Generate fading weight
        Path_Ampli=Path_Average_Amp(tap);
        Delay_Length=Path_Delay(tap);
        %% delay data
        Delayed_data_tem=[zeros(1,Delay_Length),InData];
        %%Truc
        Delayed_data=Delayed_data_tem(1:LengthOfBurst);
        %%Generate Fading weight
        Fading(tap,:)=JakesIV(Path_Ampli,An,Bn,Wn,RndPhase(tap,:),NumOfFreq,LengthOfBurst,UpdatesPerBurst,UpdateInterval,itn_sample(tap),dt);
        %% get the output data of each independent sub-channel
        Output_Sub_path=Fading(tap,:).*Delayed_data;
        Output_Each_Channel=Output_Each_Channel+Output_Sub_path;
    end
    OutData=Output_Each_Channel;
